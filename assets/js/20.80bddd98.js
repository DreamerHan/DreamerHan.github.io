(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{387:function(t,s,a){t.exports=a.p+"assets/img/homebrew.5faf57b0.png"},388:function(t,s,a){t.exports=a.p+"assets/img/compass.c34b805c.png"},481:function(t,s,a){"use strict";a.r(s);var e=a(54),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"mac-的安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac-的安装"}},[t._v("#")]),t._v(" Mac 的安装")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Mac 的安装要使用 "),e("code",[t._v("homebrew")]),t._v("，然后通过 "),e("code",[t._v("homwbrew")]),t._v(" 来安装 "),e("code",[t._v("mongodb")]),t._v("，客户端安装的是 "),e("code",[t._v("compass")])])]),t._v(" "),e("h2",{attrs:{id:"安装-homebrew"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-homebrew"}},[t._v("#")]),t._v(" 安装 "),e("code",[t._v("homebrew")])]),t._v(" "),e("p",[t._v("打开 "),e("code",[t._v("homebrew")]),t._v(" 的官网，就有安装的命令。目前 2022 年看到的是酱紫的，看到的命令行就是安装 "),e("code",[t._v("homebrew")]),t._v(" 的语句，复制执行即可。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("/bin/bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n")])])]),e("p",[e("img",{attrs:{src:a(387),alt:"An image"}})]),t._v(" "),e("p",[t._v("安装结束之后通过 "),e("code",[t._v("brew --version")]),t._v(" 就可以看到当前的版本号。")]),t._v(" "),e("h2",{attrs:{id:"切换-homebrew-源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换-homebrew-源"}},[t._v("#")]),t._v(" 切换 Homebrew 源")]),t._v(" "),e("p",[e("strong",[t._v("Homebrew")]),t._v(" 由以下几部分组成:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("简介")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("brew")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("Homebrew")]),t._v("的源代码仓库")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("homebrew-core")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("Homebrew")]),t._v(" 的核心软件仓库")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("homebrew-bottles")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("Homebrew")]),t._v(" 预编译二进制软件包")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("homebrew-cask")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("提供 "),e("code",[t._v("macOS")]),t._v(" 应用和大型二进制文件")])])])]),t._v(" "),e("h4",{attrs:{id:"切换成阿里源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换成阿里源"}},[t._v("#")]),t._v(" 切换成阿里源")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 brew.git 当前源")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("brew --repo"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\norigin    https://github.com/Homebrew/brew.git "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\norigin    https://github.com/Homebrew/brew.git "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 homebrew-core.git 当前源")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("brew --repo homebrew/core"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\norigin    https://github.com/Homebrew/homebrew-core.git "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\norigin    https://github.com/Homebrew/homebrew-core.git "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 brew.git 为阿里源")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("brew --repo"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 homebrew-core.git 为阿里源")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("brew --repo homebrew/core"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# zsh 替换 brew bintray 镜像")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.zshrc\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.zshrc\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash 替换 brew bintray 镜像")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bash_profile\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.bash_profile\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 刷新源")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这一步的时间巨长，不要怀疑出错，等等就行。如果确实没反应，就自求多福吧")]),t._v("\n$ brew update\n")])])]),e("h2",{attrs:{id:"安装-mongodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-mongodb"}},[t._v("#")]),t._v(" 安装 mongodb")]),t._v(" "),e("p",[t._v("直接上 "),e("code",[t._v("github")]),t._v(" 搜索 "),e("code",[t._v("mongodb/homebrew-brew")]),t._v(" 进入"),e("a",{attrs:{href:"https://github.com/mongodb/homebrew-brew",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("参考文档，安装社区版即可。由于现在 MongoDB 不再开源了，从 2019 年 9 月 2 日开始，HomeBrew 也从核心仓库当中移除了 mongodb 模块。")]),t._v(" "),e("p",[t._v("所以 "),e("code",[t._v("brew info mongodb")]),t._v(" 也就找不到模块了")]),t._v(" "),e("p",[t._v("但是，MongoDB 官方提供了一个单独的 HomeBrew 的社区版本安装，要先执行 "),e("code",[t._v("brew tap mongodb/brew")])]),t._v(" "),e("p",[t._v("成功后再执行 "),e("code",[t._v("brew install mongodb-community")]),t._v(" 即可，我当前安装的是 6.0.1。")]),t._v(" "),e("p",[t._v("虽然切换了源，但时间还是会很长 (๑◕︵◕๑)...")])]),t._v(" "),e("h3",{attrs:{id:"mongodb-安装坑位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-安装坑位"}},[t._v("#")]),t._v(" mongodb 安装坑位")]),t._v(" "),e("p",[t._v("通过 "),e("code",[t._v("brew")]),t._v(" 安装社区版的 "),e("code",[t._v("mongodb")]),t._v(", 最初是让升级 "),e("code",[t._v("xCode")]),t._v("，后来踩了一个坑报错是 "),e("code",[t._v("Permission denied")]),t._v(" 的坑。")]),t._v(" "),e("p",[t._v("下面是我找解决办法时碰到的安装"),e("code",[t._v("Octave")]),t._v("报相似错误的帖子，不过我们的报错信息相似（虽然我其实只记得第一行相似 😂😂）。大概的报错信息如下：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这也是我后来复制别人的，因为我的已经看不到了😃😃")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 我只记得我的是 69.1")]),t._v("\ncp: /usr/local/Cellar/icu4c/./69.1: Permission denied\ncp: /var/folders/k4/xg60pppx3392pm_9tjyy35gc0000gn/T/d20200815-50984-1k6mia6/icu4c/./69.1: unable to copy extended attributes to /usr/local/Cellar/icu4c/./69.1: Permission denied\ncp: /usr/local/Cellar/icu4c/./69.1/INSTALL_RECEIPT.json: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\ncp: /usr/local/Cellar/icu4c/./69.1/LICENSE: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\n")])])]),e("p",[e("strong",[t._v("解决方案")]),t._v("是：")]),t._v(" "),e("ol",[e("li",[t._v("我的报错的缘由是因为在 "),e("code",[t._v("/usr/local/Cellar/icu4c")]),t._v(" 文件夹下并没有 "),e("code",[t._v("69.1")]),t._v(" 这个文件夹，给它创建一个就可以了。但一定要执行")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /usr/local/Cellar/icu4c/69.1\n")])])]),e("p",[t._v("我直接在文件夹下执行了 "),e("code",[t._v("sudo mkdir 69.1")]),t._v(" 不明白为什么不行")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("赋权一：我先执行的是")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v(" /usr/local/Cellar/icu4c/69.1\n")])])]),e("p",[t._v("再次 "),e("code",[t._v("brew")]),t._v(" 安装后，仍然报错，最后几行长这样：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("cp: chflags: /usr/local/Cellar/openssl@1.1/./1.1.1m/share: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\ncp: /private/tmp/d20220208-25404-1gp1q4y/openssl@1.1/./1.1.1m/share: unable to copy ACL to /usr/local/Cellar/openssl@1.1/./1.1.1m/share: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\ncp: setattrlist: /usr/local/Cellar/openssl@1.1/./1.1.1m: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\ncp: chown: /usr/local/Cellar/openssl@1.1/./1.1.1m: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\ncp: chmod: /usr/local/Cellar/openssl@1.1/./1.1.1m: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\ncp: chflags: /usr/local/Cellar/openssl@1.1/./1.1.1m: No such "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\ncp: /private/tmp/d20220208-25404-1gp1q4y/openssl@1.1/./1.1.1m: unable to copy ACL to /usr/local/Cellar/openssl@1.1/./1.1.1m: Permission denied\ncp: setattrlist: /usr/local/Cellar/openssl@1.1/.: Permission denied\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("赋权二：然后是执行的这个，就 OK 了。具体的命令信息，我目前的水平也不懂，有空研究下。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("}")]),t._v(":staff /usr/local/Cellar/\n")])])]),e("h2",{attrs:{id:"配置-mongodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-mongodb"}},[t._v("#")]),t._v(" 配置 mongodb")]),t._v(" "),e("h4",{attrs:{id:"补充于-2022-11-16-此时我已经拥有了公司新换的-m1-mac-上述安装坑全部没有碰到。-⁎⁍ᴗ⁍⁎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#补充于-2022-11-16-此时我已经拥有了公司新换的-m1-mac-上述安装坑全部没有碰到。-⁎⁍ᴗ⁍⁎"}},[t._v("#")]),t._v(" 补充于 2022-11-16,此时我已经拥有了公司新换的 M1 Mac，上述安装坑全部没有碰到。(⁎⁍̴̛ᴗ⁍̴̛⁎)")]),t._v(" "),e("h3",{attrs:{id:"配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# brew 安装的 mongodb 配置文件目录在 M1 芯片中是")]),t._v("\n/opt/homebrew/etc/mongod.conf\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同事的非 M1 的配置目录是")]),t._v("\n/usr/local/etc/mongod.conf\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 非 brew 安装的可以查看是否一样")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过命令打开配置文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /opt/homebrew/etc/mongod.conf\n")])])]),e("h3",{attrs:{id:"开始你的配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始你的配置"}},[t._v("#")]),t._v(" 开始你的配置")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置日志文件，MongoDB 采用的是yaml格式的配置文件")]),t._v("\n\nsystemLog:\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、日志输出形式： 可选参数为 syslog 或 file    syslog 直接在终端输出    file 输出到文件")]),t._v("\n  destination: "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、日志文件的路径： 当 destination 设置为 file 时必须")]),t._v("\n  path: /opt/homebrew/var/log/mongodb/mongo.log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、是否以追加形式生成日志 ： true  追加   false   备份原来的日志文件，并生成新>的日志文件")]),t._v("\n  logAppend: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、数据库路径")]),t._v("\nstorage:\n  dbPath: /opt/homebrew/var/mongodb\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5、网络配置")]),t._v("\nnet:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 绑定IP（默认127.0.0.1，只能本机访问，要允许所有ip，使用0.0.0.0）")]),t._v("\n  bindIp: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1, ::1\n  ipv6: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后面的在配置文件中默认就没有了")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6、端口 （默认27017~27019，根据安装时的安装方式决定）")]),t._v("\n  port: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#7、进程方式")]),t._v("\nprocessManagement:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启守护进程模式，如果 fork 为 false 的话，直接 ctrl + c 停止服务。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果为true，关闭麻烦点。参考启动暂停方式 2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 我选择的是false，对新手友好点，ctrl + c 即停")]),t._v("\n  fork: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),e("h3",{attrs:{id:"全局环境变量配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局环境变量配置"}},[t._v("#")]),t._v(" 全局环境变量配置")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("首先，我的电脑通过 "),e("code",[t._v("mongod -version")]),t._v(" 后是可以直接获得当前版本号的。")]),t._v(" "),e("p",[t._v("也就是可以直接使用 "),e("strong",[t._v("mongod")]),t._v(" 指令所以不需要配置环境变量。")])]),t._v(" "),e("p",[t._v("如果需要配置，找到 brew 安装 mongodb 的文件目录。我的在这里： "),e("code",[t._v("/opt/homebrew/Cellar/mongodb-community/6.0.1/bin")])]),t._v(" "),e("p",[t._v("接着就是会用 "),e("a",{attrs:{href:"https://blog.csdn.net/weixin_45406712/article/details/121390648",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell"),e("OutboundLink")],1),t._v("就可以了。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 我当前用的是 item2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" ~/.zshrc\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置环境变量")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":/opt/homebrew/Cellar/mongodb-community/6.0.1/bin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存完 :wq 推出后")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.zshrc\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看之前的配置是否已经成功")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 能看到刚才配置的路径")]),t._v("\n")])])]),e("p",[t._v("除了 "),e("strong",[t._v("mongod")]),t._v(" 指令外，有时候我们还需要进入 mongo 的执行环境。")]),t._v(" "),e("p",[t._v("大部分文档上看到的指令应该是 "),e("strong",[t._v("mongo")])]),t._v(" "),e("p",[t._v("但是我当前安装的版本是 "),e("strong",[t._v("6.0.1")]),t._v("，貌似没有这个指令。")]),t._v(" "),e("p",[t._v("但是翻遍了文档发现有 "),e("font",{attrs:{color:"red"}},[e("strong",[t._v("mongosh")])]),t._v(" 指令可以进入执行环境。帖子参考这个 "),e("a",{attrs:{href:"https://blog.csdn.net/dongkeai/article/details/127330013",target:"_blank",rel:"noopener noreferrer"}},[t._v("进入 mongo 环境"),e("OutboundLink")],1)],1),t._v(" "),e("h2",{attrs:{id:"启动与暂停-mongodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动与暂停-mongodb"}},[t._v("#")]),t._v(" 启动与暂停 mongodb")]),t._v(" "),e("h3",{attrs:{id:"启动暂停方式-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动暂停方式-1"}},[t._v("#")]),t._v(" 启动暂停方式 1")]),t._v(" "),e("ul",[e("li",[t._v("启动服务 "),e("code",[t._v("brew services start mongodb-community")]),t._v(", 启动服务后，可以输入 "),e("code",[t._v("mongo")]),t._v(" 回车来确认")]),t._v(" "),e("li",[t._v("暂停服务 "),e("code",[t._v("brew services stop mongodb-community")])])]),t._v(" "),e("h3",{attrs:{id:"启动暂停方式-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动暂停方式-2"}},[t._v("#")]),t._v(" 启动暂停方式 2")]),t._v(" "),e("p",[t._v("我当前用的这个")]),t._v(" "),e("p",[e("strong",[t._v("启动")]),t._v("： 使用 mongod 来启动服务， 通过 --config 或 -f 命令来使用配置文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("mongod --config opt/homebrew/etc/mongod.conf\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\nmongod -f opt/homebrew/etc/mongod.conf\n")])])]),e("p",[e("strong",[t._v("注意：多次执行 "),e("code",[t._v("mongod -f")]),t._v(" 指令并不能重启 mongodb。需要先通过下面的停止方案杀死当前的进程才行。")])]),t._v(" "),e("p",[e("strong",[t._v("停止")]),t._v("(参考的别人)")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果之前的配置文件里 fork 为 false 的话，直接 ctrl + c 停止服务。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果 fork 为 true , 使用以下两种方法都可以。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方法一：通过查杀进程的方式，查看进程，使用 kill 命令；不能使用kill -9，为什么不能使用kill -9 请百度 kill 与 kill -9 的区别")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通常启动服务成功，会输出服务的进程ID，也可以使用以下命令来查看ID")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" aux "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -v "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" mongod\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上述命令查出来的信息的第二位就是 进程ID")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" 进程ID 即可关闭当前的mongodb进程\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#方法二：在客户端进去，使用shutdown命令")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" use admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nswitched to db admin\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" db.shutdownServer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nserver should be down"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在主节点（primary）上运行shutdown命令时，服务器在关闭之前，⬇️")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会先等待备份节点追赶主节点以保持同步。这将回滚的可能性降至最低，⬇️")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但shutdown操作有失败的可能性。如几秒钟内没有备份节点成功同步，⬇️")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 则shutdown操作失败，主节点不会停止运行。")]),t._v("\n")])])]),e("h3",{attrs:{id:"验证是否启动成功"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证是否启动成功"}},[t._v("#")]),t._v(" 验证是否启动成功")]),t._v(" "),e("p",[t._v("浏览器访问 "),e("code",[t._v("localhost:27017")]),t._v(" 可以成功打开一个页面，浏览器内容如下：")]),t._v(" "),e("p",[e("strong",[t._v("It looks like you are trying to access MongoDB over HTTP on the native driver port.")])]),t._v(" "),e("h2",{attrs:{id:"mongodb-客户端工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-客户端工具"}},[t._v("#")]),t._v(" mongodb 客户端工具")]),t._v(" "),e("p",[t._v("在 "),e("code",[t._v("mongodb")]),t._v(" 的官网上提供了 "),e("code",[t._v("Compass")]),t._v(" 工具，就是图标是个叶子的软件，进入安装对应电脑的版本即可。\n启动后的界面现在长这样，如果已经启动了 mongodb 服务，直接点击 connect 即可链接")]),t._v(" "),e("p",[e("img",{attrs:{src:a(388),alt:"An image"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);