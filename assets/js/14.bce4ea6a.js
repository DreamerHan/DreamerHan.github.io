(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{412:function(_,t,v){_.exports=v.p+"assets/img/1-1.1fc9d867.png"},413:function(_,t,v){_.exports=v.p+"assets/img/1-2.4565ab93.png"},414:function(_,t,v){_.exports=v.p+"assets/img/1-3.a96273c5.png"},540:function(_,t,v){"use strict";v.r(t);var s=v(54),e=Object(s.a)({},(function(){var _=this,t=_.$createElement,s=_._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[_._v("#")]),_._v(" 堆")]),_._v(" "),s("p",[_._v("堆，是一种特殊的完全二叉树。")]),_._v(" "),s("p",[_._v("但是对和树的数据结构形式不同，树的结构一般都利用类似于链表的形式，通过 "),s("code",[_._v("chilren")]),_._v(" 或是 "),s("code",[_._v("left")]),_._v(" 又或是 "),s("code",[_._v("right")]),_._v(" 等字段扩展下一级，类似于原型链中的 "),s("code",[_._v("__proto__")]),_._v("。")]),_._v(" "),s("p",[_._v("但是堆不同，堆只能说结构像树，但实际上通过数据形式来实现表示时，它是用"),s("strong",[_._v("数组")]),_._v("的形式展示的。")]),_._v(" "),s("p",[_._v("如："),s("code",[_._v("[1,2,3,4,5,6]")]),_._v(" 就可以表示一个堆，它的数据形式是数组，但是结构形式可以如下图：")]),_._v(" "),s("p",[s("img",{attrs:{src:v(412),alt:"An image"}})]),_._v(" "),s("h2",{attrs:{id:"堆类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆类型"}},[_._v("#")]),_._v(" 堆类型")]),_._v(" "),s("ol",[s("li",[s("p",[_._v("常用的堆有两种：")]),_._v(" "),s("ul",[s("li",[s("strong",[_._v("最大堆：")]),_._v(" 所有的节点都 大于等于 ≥ 它的子节点。")]),_._v(" "),s("li",[s("strong",[_._v("最小堆：")]),_._v(" 所有的节点都 小于等于 ≤ 它的子节点。")])])]),_._v(" "),s("li",[s("p",[_._v("堆有三个公式：")])])]),_._v(" "),s("ul",[s("li",[_._v("左侧子节点位置是 "),s("code",[_._v("2 * 数组索引 index + 1")])]),_._v(" "),s("li",[_._v("右侧字节点位置是 "),s("code",[_._v("2 * 数组索引 index + 2")])]),_._v(" "),s("li",[_._v("父节点的位置是 "),s("code",[_._v("Math.floor((数组索引 index - 1) / 2)")])])]),_._v(" "),s("h2",{attrs:{id:"最小堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最小堆"}},[_._v("#")]),_._v(" 最小堆")]),_._v(" "),s("p",[_._v("最小堆是一种经过排序的完全二叉树，其中任意非终端节点数值均不大于其左子节点和右子节点的值。就是说，最小堆，是根节点永远比左右子节点都小。")]),_._v(" "),s("p",[_._v("假如我们要将一个现成的二叉树变成一个最小堆，要进行如下做法：")]),_._v(" "),s("p",[_._v("将遍历到的节点分别根据上述堆的三个公式，获取其左右子节点左对比，如果根节点大于子节点，就和子节点做位置调换。将根节点变成子节点，将子节点变成根节点。")]),_._v(" "),s("p",[_._v("如下图，一个二叉树结构：")]),_._v(" "),s("p",[s("img",{attrs:{src:v(413),alt:"An image"}})]),_._v(" "),s("p",[_._v("变成最小堆后如下：\n"),s("img",{attrs:{src:v(414),alt:"An image"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);